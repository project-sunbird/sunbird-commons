swagger: '2.0'
info:
  version: '3.0'
  title: Composite Search - API
  description: >-
    Composite search API provides a single window access to all indexed data in
    the platform. The search is backed by an elastic search index, allowing the
    user to search for different types of objects using a single keyword. The
    index is updated on every update to the Graph.
  license:
    name: EkStep License
    url: 'http:www.ekstep.in'
basePath: /search/v3
host: api.ekstep.in
securityDefinitions: {}
consumes:
  - application/json
schemes:
  - https
produces:
  - application/json
tags: []
paths:
  /search:
    post:
      summary: Search API to search all indexed data
      description: >-
        This is the main API that accepts the search request and returns the
        response. The API contract is identical to the graph data structures. So
        the returned data structures for each object type conform to the
        definition specification for that object type.
      tags: []
      operationId: ekstep.search.composite-search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Body
          required: true
          schema:
            $ref: '#/definitions/searchRequestBody'
          x-is-map: false
      responses:
        '200':
          description: Search operation successful
          schema:
            $ref: '#/definitions/searchResponse'
        '400':
          description: >-
            Error While searching index! | Error occurred while operation,
            mostly because of the input given by client, In general it is
            'Client Exception'
          schema:
            $ref: '#/definitions/FailedResponseHeader'
        '500':
          description: >-
            Error While searching index! | Error occurred while operation,
            mostly because of erroneous condition on server, In general it is
            'Server Exception' or 'Exception'
          schema:
            $ref: '#/definitions/FailedResponseHeader'
      security: []
definitions:
  searchRequestBody:
    type: object
    required:
      - id
      - params
      - request
      - ts
      - ver
    properties:
      id:
        type: string
      ver:
        type: string
      ts:
        type: string
      params:
        $ref: '#/definitions/RequestParams'
      request:
        $ref: '#/definitions/searchObject'
    title: Search Request Body
  searchResponse:
    type: object
    title: result
    properties:
      id:
        type: string
      ver:
        type: string
      ts:
        type: string
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: string
      result:
        $ref: '#/definitions/searchResult'
  searchObject:
    properties:
      query:
        type: string
        description: Text query string to match
      filters:
        type: object
        description: Additional filters to apply based on the attributes of the objects
        properties:
          objectType:
            type: array
            description: >-
              if provided, confines the search to the specified list of object
              types
            items:
              type: string
          identifier:
            type: array
            description: >-
              if provided, confines the search to the objects with the specified
              list of identifiers
            items:
              type: string
          status:
            type: array
            description: >-
              if provided, confines the search to the objects having the
              specified status values. else, the search is confined to Live
              objects
            items:
              type: string
          filterProperty:
            type: string
            description: >-
              Search request can contain multiple filters. Each filter has a
              key, which is one of the properties of object and value can be an
              array (to do an IN search) or a single value (to do an exact match
              search) or to check ranges using min/max parameters
      exists:
        type: array
        description: Filter to match objects which contains a given field
        items:
          type: string
      not_exists:
        type: array
        description: Filter to match objects which does not contain a given field
        items:
          type: string
      facets:
        type: array
        description: Presents the aggregated count of the search result by given field(s)
        items:
          type: string
      sort_by:
        type: object
        description: criteria to sort the results - a map of sort_key and sort_order values
        properties:
          sort_key:
            type: string
            description: >-
              field on which the result should be sorted - should be one of the
              properties defined for the object type
          sort_order:
            type: string
            description: order in which results should be sorted - asc or desc
  searchResult:
    properties:
      count:
        type: number
        description: ''
      objectType:
        type: array
        description: 'list of object matching the search criteria, grouped by object type'
        items:
          type: object
          description: map of object properties
      facets:
        type: array
        description: aggregated counts grouped by different fields
        items:
          type: object
          properties:
            name:
              type: string
              description: name of the field on which the results are aggregated
            values:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: field value
                  count:
                    type: number
                    description: number of objects having the value
  RequestParams:
    type: object
    required:
      - msgid
    properties:
      msgid:
        type: string
    title: Params
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  FailedResponseHeader:
    title: Failure Response
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/FailedResponseParams'
      responseCode:
        type: string
        description: responseCode
      result:
        properties:
          result:
            type: string
            description: result
  FailedResponseParams:
    title: Failed Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
