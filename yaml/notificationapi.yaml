swagger: '2.0'
info:
  version: '1.0'
  title: Notification (Email) API(s)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  contact:
    email: admin@open-sunbird.org
  description: >-
    The Email resources provides the notification mechanism for all the users on Sunbird .The Resource notifies users officially about something on Sunbird.
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /api/v1
securityDefinitions:
  auth:
    type: apiKey
    name: api_key
    in: header
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  '/email ':
    post:
      description: >-
       This API is associated with notifying a user on the Sunbird Platform.
          - {{host}}/v1/notification/email , This is the format of the API URL for sending notifications. 
          - The **_/email/_** endpoint executes the notification request based on parameters provided as metadata in the request body.
          - It is mandatory to provide values for parameters marked with *. 
          - Mandatory fields cannot be null or empty.
      summary: ' Notifiying Users'
      tags:
      - Notification APIs
      operationId: '{{host}}/v1/notification/email '
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: >-
            The body refers to the format of the request.
              - The body contains metadata about the notification to be sent.
        schema:
          $ref: '#/definitions/{{host}}~1v1~1notification~1emailRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      responses:
        '200':
          description: 'OK ! Successful operation."Notifying User" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Notifying User" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! These errors are tracked automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: '/email '
          headers:
            Content-Type: application/json
          body: "{\r\n\r\n    \"request\":{                 \r\n      \"name\": \"Amit\",\r\n      \"subject\": \"test email\",\r\n      \"body\": \"Hello Amit.\",\r\n      \"downloadUrl\": \"https://www.google.com/\",\r\n      \"recipientEmails\":[\"amit.kumar@tarento.com\",\"amit1.kumar@tarento.com\"],\r\n      \"recipientUserIds\": [\"bda45d96-cb3b-4e62-be87-3d0348063892\"] \r\n    }\r\n}  "
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: '{{host}}/v1/notification/email '
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  '{{host}}/v1/notification/emailRequest':
    title: '{{host}}/v1/notification/email Request'
    example:
      request:
        name: Amit
        subject: test email
        body: Hello Amit.
        downloadUrl: https://www.google.com/
        recipientEmails:
        - amit.kumar@tarento.com
        - amit1.kumar@tarento.com
        recipientUserIds:
        - bda45d96-cb3b-4e62-be87-3d0348063892
    type: object
    properties:
      request:
        $ref: '#/definitions/Request'
    required:
    - request
  Request:
    title: Request
    type: object
    properties:
      name:
        description: ''
        type: string
      subject:
        description: ''
        type: string
      body:
        description: ''
        type: string
      downloadUrl:
        description: ''
        type: string
      recipientEmails:
        description: ''
        type: array
        items:
          type: string
      recipientUserIds:
        description: ''
        type: array
        items:
          type: string
    required:
    - name
    - subject
    - body
    - downloadUrl
    - recipientEmails
    - recipientUserIds
  ContentCreateResponse:
    description: Create Content Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: API Identifier
      ver:
        type: string
        description: API version information
      ts:
        type: string
        description: API execution timespan
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'API response code '
  NodeId:
    title: Node Id
    type: object
    properties:
      node_id:
        type: string
        description: Node Identifier
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: Response Message Id
      msgid:
        type: string
        description: Message Id
      err:
        type: string
        description: Error Code
      status:
        type: string
        description: Response Status
      errmsg:
        type: string
        description: Error Message
  ContentCreateErrorResponse:
    title: Create Content Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
